BAPP=4
ID=VARA
Name=VARA++
Comment='WINE/Box(86) - VARA Modem'
VerLocal=0
VerRemote=0
W3='https://github.com/WheezyE/Winelink/tree/main/docs'
Author='spud'
NOTE='installer script failure? please report'

INSTALL(){
    cd ${BAPSRC}
    rm -rf winelink
    mkdir winelink
    cd winelink

    #winetricks
    echo -e "INFORMATIONAL: installing winetricks"
    wget  https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
    chmod +x winetricks 
    sudo mv -v winetricks /usr/local/bin
    
    if [[ $(whereis wine | grep bin) ]];then
        #wine already installed
        echo -e "INFORMATIONAL: wine already installed"
        action=$(yad --center --title "Question" --image "dialog-question" \
            --button="ConfigWine:0" --button="Close:2" --text "Attempt winetricks configs? (assume yes)") return_code="${?:-'2'}"

        if [ "$return_code" -eq 0 ]; then

            #winetricks and such
            WINEARCH=win32 winecfg
            /usr/local/bin/winetricks --force pdh_nt4
            /usr/local/bin/winetricks --force vb6run
            /usr/local/bin/winetricks --force comdlg32ocx
            /usr/local/bin/winetricks --force comctl32ocx
            /usr/local/bin/winetricks --force vcrun2003
            #/usr/local/bin/winetricks --force vcrun2005
            /usr/local/bin/winetricks --force vcrun2008
            /usr/local/bin/winetricks --force vcrun2010
            /usr/local/bin/winetricks --force corefonts
        fi

        if [ -d ${BAPSRC}/winelink/downloads.winlink.org ];then
            xdg-open ${BAPSRC}/winelink/downloads.winlink.org
        else
            #vara bins / download VARA
            cd ${BAPSRC}/winelink
            echo -e "INFORMATIONAL: downloading vara and winlink binary"
            wget -r -A "*.zip" 'https://downloads.winlink.org/VARA%20Products/'

            yad --title="bAPi - vara installer" --center --button="OK" \
            --text="Winlink and VARA binary need manually installed \n downloaded to ${BAPSRC}/winelink/downloads.winlink.org"
            xdg-open ${BAPSRC}/winelink/downloads.winlink.org
        fi

        echo -e "INFORMATIONAL: Ideally everything works now but if not please report, good time to reboot"

    else
        echo -e "INFORMATIONAL: apt-get required packages"
        sudo apt-get -y install cabextract
        echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
        sudo apt-get -y install ttf-mscorefonts-installer

        if [[ "$BAPCPU" == *"ar"* ]]; then
            #arm
            if [[ $(whereis pi-apps | grep bin) ]];then
                pi-apps 
            else
                #install pi-apps
                git clone https://github.com/Botspot/pi-apps
                cd pi-apps
                bash install
                yad --title="bAPi - vara installer" --width=420 --height=200 --fixed --center  --button="OK" \
                    --text="Vara is emulated in wine, we need to install that and some more\n \
                    install Wine/Box in Pi-Apps Tools, Emulation, Box86(arm).\n \
                    This method of install may not work at the moment, please report any issues."
                echo -e "INFORMATIONAL: Now go install Wine/Box in pi-apps Tools, Emulation, Box86(arm) run this again to configure"
                cd ..
                rm -rf pi-apps
            fi
        else
            #x86
            action=$(yad --center --title "Question" --image "dialog-question" \
                --button="Wine-HQ:0" --button="Dist-Repo:2" --text "Use OSrepo or add Wine-HQ (recomend Wine-HQ is newer)") return_code="${?:-'2'}"

            if [ "$return_code" -eq 0 ]; then
                echo -e "INFORMATIONAL: attempting wine HQ"
                sudo mkdir -pm755 /etc/apt/keyrings
                sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
                sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
                sudo apt update
                sudo apt-get -y install --install-recommends wine-stable winehq-stable
            else
                echo -e "INFORMATIONAL: using OS Sources typically older"
                sudo apt-get install wine-installer wine-stable wine32
            fi

            #winetricks and such
            WINEARCH=win32 winecfg

            /usr/local/bin/winetricks --force pdh_nt4
            /usr/local/bin/winetricks --force vb6run
            /usr/local/bin/winetricks --force comdlg32ocx
            /usr/local/bin/winetricks --force comctl32ocx
            /usr/local/bin/winetricks --force vcrun2003
            #/usr/local/bin/winetricks --force vcrun2005
            /usr/local/bin/winetricks --force vcrun2008
            /usr/local/bin/winetricks --force vcrun2010
            /usr/local/bin/winetricks --force corefonts

        fi

        echo -e "INFORMATIONAL: Winlink and VARA binary need manually installed \n downloaded to ${BAPSRC}/winelink/downloads.winlink.org"
        echo -e "INFORMATIONAL: if your on a Pi remember to go install Wine/Box in pi-apps Tools, Emulation, Box86(arm) run this again to configure"
        
        if [ -d ${BAPSRC}/winelink/downloads.winlink.org ];then
            xdg-open ${BAPSRC}/winelink/downloads.winlink.org
        else
            #vara bins / download VARA
            cd ${BAPSRC}/winelink
            echo -e "INFORMATIONAL: downloading vara and winlink binary"
            wget -r -A "*.zip" 'https://downloads.winlink.org/VARA%20Products/'

            yad --title="bAPi - vara installer" --center --button="OK" \
            --text="Winlink and VARA binary need manually installed \n downloaded to ${BAPSRC}/winelink/downloads.winlink.org"
            xdg-open ${BAPSRC}/winelink/downloads.winlink.org
        fi
        
    fi
}

VERSION(){
    if [[ $(whereis wine | grep bin) ]];then
        CURRENT=re-run
            if [ -d ${HOME}/.wine/drive_c ];then
                CURRENT=BoxOK,no-vara
                    if [ -d ${HOME}/.wine/drive_c/VARA ];then
                        CURRENT=VARAok
                    fi
            fi
    else
        CURRENT=NONE
    fi
    NEWVER=$(curl --max-time 20 -s https://rosmodem.wordpress.com | grep -o "HF v......" | sed 's/HF v//'g)
}

DEPENDS(){
    NEEDED='PULSE'
    #apt-gets will be checked on app-check
}
